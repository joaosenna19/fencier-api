// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Organization {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  tenantId    String    @unique @default(uuid())
  name        String
  address     Address[]
  adminName   String
  phoneNumber String
  email       String    @unique
  websiteUrl  String
  logoUrl     String
  createdAt   DateTime  @default(now())
  active      Boolean   @default(true)
}

model Admin {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tenantId    String
  firstName   String
  lastName    String
  phoneNumber String
  email       String   @unique
  password    String
  createdAt   DateTime @default(now())
}

model CustomerInfo {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  quoteId     String    @db.ObjectId
  firstName   String
  lastName    String
  address     Address[]
  phoneNumber String
  email       String

  quote Quote @relation(fields: [quoteId], references: [id], onDelete: Cascade)

}

model Material {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tenantId    String
  name        String
  styles      Style[]
  createdAt   DateTime @default(now())
}

model Quote {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  tenantId     String
  materialId   String      @db.ObjectId
  styleId      String      @db.ObjectId
  colorId      String      @db.ObjectId
  heightId     String      @db.ObjectId
  feet         Float
  singleGate  Boolean?
  finalPrice        Float
  status       QuoteStatus
  createdAt    DateTime    @default(now())
  customerInfo CustomerInfo[]

  }

model Style {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  materialId String  @db.ObjectId
  name       String
  colors     Color[]

  material Material @relation(fields: [materialId], references: [id], onDelete: Cascade)
}

model Color {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  styleId      String @db.ObjectId
  name         String
  heights      Height[]

  style Style @relation(fields: [styleId], references: [id], onDelete: Cascade)
  
}

model Height {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  feet        Float
  pricePer8Ft Float
  pricePer4Ft Float
  priceSingleGate Float
  priceDoubleGate Float
  gateFeet  Float @default(4)
  colorId     String @db.ObjectId

  color Color @relation(fields: [colorId], references: [id], onDelete: Cascade)

}

type Address {
  street     String
  city       String
  province   String
  postalCode String
  country    String
}

enum QuoteStatus {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
}
